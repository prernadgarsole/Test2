name: Asana Integration

on:
  push:
    branches:
      - main

jobs:
  asana:
    runs-on: windows-latest
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Create Asana task
        run: |
          npm install --save axios nodemailer
          node -e "
            const axios = require('axios');
            const nodemailer = require('nodemailer');

            const taskName = 'New Push:';
            const branchName = process.env.GITHUB_REF.split('/').pop();
            const commitAuthor = process.env.GITHUB_ACTOR;
            const commitMessage = process.env.GITHUB_SHA;
            const projectId = '1204763105220463'; // Replace with your Asana project ID
            const token = '1/1204760161937729:b3bcc2c3e471c304b84924c4d1290a59'; // Replace with your Asana Personal Access Token

            const createTask = async () => {
              try {
                const response = await axios.post(
                  'https://app.asana.com/api/1.0/tasks',
                  {
                    data: {
                      name: taskName,
                      notes: 'Branch: ' + branchName + '\\nAuthor: ' + commitAuthor + '\\nCommit SHA: ' + commitMessage,
                      projects: [projectId],
                    },
                  },
                  {
                    headers: {
                      'Authorization': 'Bearer ' + token,
                    },
                  }
                );
                console.log('Asana task created with ID:', response.data.data.id);
                const taskId = response.data.data.id;
                fetchAssigneeEmail(taskId);
              } catch (error) {
                console.error('Error creating Asana task:', error.response.data.errors);
              }
            };

            const fetchAssigneeEmail = async (taskId) => {
              try {
                const response = await axios.get(
                  'https://app.asana.com/api/1.0/tasks/' + taskId,
                  {
                    headers: {
                      'Authorization': 'Bearer ' + token,
                    },
                  }
                );
                const assigneeEmail = response.data.data.assignee.email;
                sendEmailNotification(assigneeEmail, taskId);
              } catch (error) {
                console.error('Error fetching assignee email:', error.response.data.errors);
              }
            };

            const sendEmailNotification = (assigneeEmail, taskId) => {
              const transporter = nodemailer.createTransport({
                service: 'gmail',
                auth: {
                  user: 'prernagarsole@gmail.com', // Replace with your Gmail email address
                  pass: 'ocycmtbojtdomkof', // Replace with your Gmail application-specific password
                },
              });

              const mailOptions = {
                from: 'prernagarsole@gmail.com', // Replace with your Gmail email address
                to: assigneeEmail,
                subject: 'New GitHub Push',
                text: 'A new push event has occurred on GitHub. Task ID: ' + taskId,
              };

              transporter.sendMail(mailOptions, (error, info) => {
                if (error) {
                  console.error('Error sending email:', error);
                } else {
                  console.log('Email notification sent:', info.response);
                }
              });
            };

            createTask();
          "







