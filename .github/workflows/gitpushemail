name: GHCtest_ci

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

jobs:
  AutomatedDeploymentTesting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Fetch Asana Task Details
        id: fetch-task-details
        env:
          ASANA_TOKEN: ${{ secrets.ASANA_TOKEN }}
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          startsWith(github.event.pull_request.head.ref, 'task-')  # Replace 'task-' with your working branch prefix
        run: |
          # Extract the Asana ticket ID from the working branch name
          $ticket_id = [regex]::Match('${{ github.event.pull_request.head.ref }}', '\d{5}').Value
          if ($ticket_id) {
            # Use the ticket ID to fetch the task details from Asana
            $workspace_id = "10415102240585"  # Replace with your actual workspace ID
            $asana_url = "https://app.asana.com/api/1.0/tasks/$ticket_id?workspace=$workspace_id"
            $headers = @{
              "Authorization" = "Bearer $env:ASANA_TOKEN"
            }
            $task_details = Invoke-RestMethod -Uri $asana_url -Headers $headers
            echo "Task Details:"
            echo "Assignee: $($task_details.data.assignee.name)"
            # Print other task details as needed
          } else {
            echo "No Asana ticket ID found in the working branch name."
          }

          
      - name: Deploy to Testing
        id: deploy
        uses: ./.github/workflows/ucd.yml
        env:
          DEPLOYMENT_DIR: 'Testing'
        with:
          args: '--deploy'

  AutomatedDeploymentProduction:
    runs-on: runner-186
    needs: ["AutomatedDeploymentTesting"]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch Asana Task Details
        id: fetch-task-details
        env:
          ASANA_TOKEN: ${{ secrets.ASANA_TOKEN }}
        run: |
          # Extract the Asana ticket ID from the working branch name
          $ticket_id = [regex]::Match('${{ github.head_ref }}', '\d{5}').Value
          # Use the ticket ID to fetch the task details from Asana
          $workspace_id = "10415102240585"  # Replace with your actual workspace ID
          $asana_url = "https://app.asana.com/api/1.0/tasks/$ticket_id?workspace=$workspace_id"
          $headers = @{
            "Authorization" = "Bearer $env:ASANA_TOKEN"
          }
          $task_details = Invoke-RestMethod -Uri $asana_url -Headers $headers
          echo "::set-output name=task-details::$task_details"
          
      - name: Check Task Status
        id: check-task-status
        run: |
          # Extract the task status from the task details
          $task_status = ${{ steps.fetch-task-details.outputs.task-details }}.data.status.name
          if ($task_status -ne "Approved") {
            echo "Task is not approved. Exiting workflow."
            exit 1
          }
          
      - name: Deploy to Production
        id: deploy
        uses: ./.github/workflows/ucd.yml
        env:
          DEPLOYMENT_DIR: 'Production'
        with:
          args: '--deploy'
          
  SendNotification:
    runs-on: runner-186
    needs: ["AutomatedDeploymentTesting", "AutomatedDeploymentProduction"]
    steps:
      - uses: actions/checkout@v3
      - name: Fetch Asana Task Details
        id: fetch-task-details
        env:
          ASANA_TOKEN: ${{ secrets.ASANA_TOKEN }}
        run: |
          # Extract the Asana ticket ID from the working branch name
          $ticket_id = [regex]::Match('${{ github.head_ref }}', '\d{5}').Value
          # Use the ticket ID to fetch the task details from Asana (replace `WORKSPACE_ID` with actual workspace ID)
          $task_details = Invoke-RestMethod -Uri "https://app.asana.com/api/1.0/tasks/$ticket_id?workspace=10415102240585" -Headers @{ Authorization = "Bearer $env:ASANA_TOKEN" }
          echo "::set-output name=task-details::$task_details"
          
      - name: Fetch Asana Assignee Email
        id: fetch-assignee-email
        run: |
          # Extract the assignee email from the task details
          $assignee_email = ${{ steps.fetch-task-details.outputs.task-details }}.data.assignee.email
          echo "::set-output name=assignee-email::$assignee_email"
      - name: Fetch Asana Requester Email
        id: fetch-requester-email
        run: |
          # Extract the requester email from the task details
          $requester_email = ${{ steps.fetch-task-details.outputs.task-details }}.data.requester.email
          echo "::set-output name=requester-email::$requester_email"
          
      - name: Send Notification
        if: github.event.pull_request.base.ref == 'Test'
        uses: dawidd6/action-outlook-mail@v3
        with:
          smtp-server: compass1.nfcu.net
          smtp-port: 25
          to: ${{ steps.fetch-assignee-email.outputs.assignee-email }}
          subject: Successful deployment notification
          body: |
            "Dear assignee, 
            The deployment to the TEST environment has been successfully completed.     
            Best regards,
            Your Organization"
            
      - name: Send Notification
        if: github.event.pull_request.base.ref == 'master'
        uses: dawidd6/action-outlook-mail@v3
        with:
          smtp-server: compass1.nfcu.net
          smtp-port: 25
          to: ${{ steps.fetch-requester-email.outputs.requester-email }}
          subject: Successful deployment notification
          body: |
            "Dear requester,     
            The deployment to the production environment has been successfully completed.        
            Best regards,
            Your Organization"
  
  PublishUCD:
    needs: ["AutomatedDeploymentProduction"]
    uses: deploy-mgmt-test/DeplMgmtApp/.github/workflows/ucd.yml@feature-Asana-GH-Integration-POC
    secrets: inherit
    
  PublishGitHub:
    needs: ["PublishUCD"]
    uses: deploy-mgmt-test/DeplMgmtApp/.github/workflows/upload.yml@feature-Asana-GH-Integration-POC
    secrets: inherit
------



 SendNotificationTesting:
    runs-on: runner-186
    needs: ["AutomatedDeploymentTesting"]
    steps:
      - name: Fetch Asana Task Details
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const taskDetails = await github.actions.outputs['task-details'];
            const assigneeEmail = taskDetails.data.assignee.email;
            console.log(`::set-output name=assignee-email::${assigneeEmail}`)

      - name: Send Notification - Testing
        if: github.event.pull_request.base.ref == 'Test'
        uses: dawidd6/action-outlook-mail@v3
        with:
          smtp-server: compass1.nfcu.net
          smtp-port: 25
          to: ${{ steps.fetch-assignee-email.outputs.assignee-email }}
          subject: Successful deployment notification - Testing
          body: |
            Dear assignee, 
            The deployment to the TEST environment has been successfully completed.     
            Best regards,
            Your Organization

  SendNotificationProduction:
    runs-on: runner-186
    needs: ["AutomatedDeploymentProduction"]
    steps:
      - name: Fetch Asana Task Details
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const taskDetails = await github.actions.outputs['task-details'];
            const requesterEmail = taskDetails.data.requester.email;
            console.log(`::set-output name=requester-email::${requesterEmail}`)

      - name: Send Notification - Production
        if: github.event.pull_request.base.ref == 'Master'
        uses: dawidd6/action-outlook-mail@v3
        with:
          smtp-server: compass1.nfcu.net
          smtp-port: 25
          to: ${{ steps.fetch-requester-email.outputs.requester-email }}
          subject: Successful deployment notification - Production
          body: |
            Dear requester,     
            The deployment to the production environment has been successfully completed.        
            Best regards,
            Your Organization
